#!/usr/bin/env ruby
require "fileutils"

APP_ROOT = File.expand_path("..", __dir__)

def system!(*args)
  system(*args, exception: true)
end

FileUtils.chdir APP_ROOT do
  # This script is a way to set up or update your development environment automatically.
  # This script is idempotent, so that you can run it at any time and get an expectable outcome.
  # Add necessary setup steps to this file.

  puts "== Installing dependencies =="
  system("bundle check") || system!("bundle install")

  # puts "\n== Copying sample files =="
  # unless File.exist?("config/database.yml")
  #   FileUtils.cp "config/database.yml.sample", "config/database.yml"
  # end

  puts "\n== Creating databases =="
  databases = %w[pludr_development pludr_test]

  # We need to create the development and test databases manually because Rails does not support the icu locale
  # that we need to set for the Danish locale.
  databases.each do |database|
    require "pg"
    conn = PG.connect(
      dbname: 'postgres',
      user: ENV.fetch("DB_USERNAME") { "postgres" },
      password: ENV.fetch("DB_PASSWORD") { "postgres" },
      host: ENV.fetch("DB_HOST") { "localhost" },
      port: ENV.fetch("DB_PORT") { 5432 }
    )

    begin
      conn.exec("CREATE DATABASE #{database} LOCALE_PROVIDER = icu ICU_LOCALE = 'da-DK-x-icu' TEMPLATE = template0;")
      puts "Created database '#{database}'"
    rescue PG::DuplicateDatabase
      puts "Database '#{database}' already exists"
    end
  end

  puts "\n== Preparing database =="
  system! "bin/rails db:prepare"

  puts "\n== Removing old logs and tempfiles =="
  system! "bin/rails log:clear tmp:clear"

  unless ARGV.include?("--skip-server")
    puts "\n== Starting development server =="
    STDOUT.flush # flush the output before exec(2) so that it displays
    exec "bin/dev"
  end
end
